public class Types {

    public static void main(String[] args) {
    byte a = 0; //-128..127
    Byte aa = Byte.MAX_VALUE;
    short b = 1; //-2^15..
    Short bb = b;
    int c = 2;
    Integer cc = c;
    long  d = 1_943_958_349_854_319L;
    Long dd = d;
    Long x2 = x1 - 1;
    Long x3 = x2 + 1;
    // маленькие числа равны по ==, большие - нет. верно только для классов(большие буквы)
    // сравнение дичайше отсасывает для классов
    System.err.printLn(x1 == dd);

    //константа по умолчанию инт
    //чтобы long в конце букву L
    //начиная с 7 джавы можно разбивать число с помощью подчеркиваний (где угодно, сколько угодно, кроме начала и конца)
    //0__________0 - тоже число лол
    //0xab__________ba - 16-ричная
    //числа с ведущим нулем - в восьмеричной системе
    //0b0010101010101010 - двоичная
    //кроме типов есть классы - с большой буквы. тоже могут хранить. 
    
    float f = 0.123f;
    Float ff = Float.MAX_VALUE;
    double d = 0.123123;
    Double dd = Double.MIN_VALUE;
    //у вещественных ведущий ноль - не восьмеричная, а просто ведущий ноль. но если нет цифр после точки, то восьмеричная.
    Double.POSITIVE_INFINITY + Double.NEGATIVE_INFINITY == NaN;
    Double.NaN != Double.NaN //остальное сравнение дает false
    Math.PI; Math.E;
    
    char c = 'a'
    Character(куча методов)

    boolean = true/false;

    a++
    ++a
    //нет проверки переполнения типа
    //+= и тому подобное сосут, так как приводят число справа к типу слева.
    // >> << - сдвиги
    // >>> - сдвиг со знаком или типа того

    //логические операции
    //в двойных не вычисляется, если ответ очевиден
    int aaa;
    aaa instanceof Number;
    (e & a : b)

    int[] a = {1, 2, 3};
    //массив - сылка
    //можно выводит Arrays.toString(a)

    // принимает массив строчек main(String... args);
    // main("jbjhb", "hghj");
    
    String = "dsfvdsav";
    //можно складывать
    s.toCharArray();
    
    //можно гле-о запилить блок {}. переменные будет видно только в нем.
    //если final, то менять нельзя
    //break - завершает текущий фор
    //continue - завершает итерацию
    //goto const есть, но их нельзя использовать


   fori: for ... {
         for ... {
            break fori;
         }
   }

    }
                                        
}
