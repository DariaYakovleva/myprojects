Инкапсуляция
Наследование
Полиморфизм


Стек
	//создание
	void push(Object a)
	Object pop()
	Object peel()
	int size()
	boolean isEmpty()

	Моделирование стека
		Состояние стека
			s1..sn
			size

		Push
			//Post: size = size' + 1 and es = 0 and ei = ei', i = 1..s

		Pop
			//Pre: s >= 1
			//Post: s >= 1 and s = s' - 1 and ei = ei' i = 1..s

		size
			const result = s

		isEmpty
			const result = s == 0

		Peel
			//Pre: s >= 1
			//Post: result = es


Сслылка перекидывается
	ссылка нначинает указывать в другое место
	На старый массив ничего не указывает
	придет сборщик мусора, т.к. нельзя никому получить доступ


Контракт - гарантия внешнему миру
Интерфейс - набор методов доступных пользователю
Детали реализации -> private

Инкапсульция - отделение деталей реализации от интерфейса(что-то там про контракт)
Убрать static -> получим структурку

Стандартное соглашение Java
	есть this

	stack1.pop() <=> ASADT.pop(stack1)
	заменим ссылку на stack на ссылку this
	и уберем везде static


	если идет обращение к переменной и ее нет, то автоматически добавляется "this." в начало

	ArrayStackModule - со static
	"синтаксический сахар" - то же самое, но удобнее, приятнее, короче


Домашнее задание: очередь тремя способами
					модули
					абстрактый тип
					объект

					С КОНТРАКТОМ
					на массиве??